[Debug] func: Function { name: "main", parameters: [], is_var_arg: false, return_type: TypeRef(IntegerType { bits: 32 }), basic_blocks: [BasicBlock { name: Number(0), instrs: [Alloca(Alloca { allocated_type: TypeRef(IntegerType { bits: 32 }), num_elements: ConstantOperand(ConstantRef(Int { bits: 32, value: 1 })), dest: Number(1), alignment: 4, debugloc: None }), Store(Store { address: LocalOperand { name: Number(1), ty: TypeRef(PointerType { pointee_type: TypeRef(IntegerType { bits: 32 }), addr_space: 0 }) }, value: ConstantOperand(ConstantRef(Int { bits: 32, value: 0 })), volatile: false, atomicity: None, alignment: 4, debugloc: None })], term: Ret(Ret { return_operand: Some(ConstantOperand(ConstantRef(Int { bits: 32, value: 2022 }))), debugloc: None }) }], function_attributes: [NoInline, NoUnwind, OptNone, UWTable, StringAttribute { kind: "correctly-rounded-divide-sqrt-fp-math", value: "false" }, StringAttribute { kind: "disable-tail-calls", value: "false" }, StringAttribute { kind: "frame-pointer", value: "all" }, StringAttribute { kind: "less-precise-fpmad", value: "false" }, StringAttribute { kind: "min-legal-vector-width", value: "0" }, StringAttribute { kind: "no-infs-fp-math", value: "false" }, StringAttribute { kind: "no-jump-tables", value: "false" }, StringAttribute { kind: "no-nans-fp-math", value: "false" }, StringAttribute { kind: "no-signed-zeros-fp-math", value: "false" }, StringAttribute { kind: "no-trapping-math", value: "false" }, StringAttribute { kind: "stack-protector-buffer-size", value: "8" }, StringAttribute { kind: "target-cpu", value: "x86-64" }, StringAttribute { kind: "target-features", value: "+cx8,+fxsr,+mmx,+sse,+sse2,+x87" }, StringAttribute { kind: "unsafe-fp-math", value: "false" }, StringAttribute { kind: "use-soft-float", value: "false" }], return_attributes: [], linkage: External, visibility: Default, dll_storage_class: Default, calling_convention: C, section: None, comdat: None, alignment: 0, garbage_collector_name: None, personality_function: None, debugloc: None }


